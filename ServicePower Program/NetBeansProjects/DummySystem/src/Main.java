
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
//import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Main extends javax.swing.JFrame {

    public Main() {
        initComponents();
        Seticon();
        slideshow.initSlideshow(new Slide1(),new Slide2(),new Slide3());
        slideshow_1.initSlideshow_1(new SlideIN1(),new SlideIN2());
        slideshow_2.initSlideshow_2(new SlideIN1(),new SlideIN2());
        slideshow_3.initSlideshow_3(new SlideIN1(),new SlideIN2());
        slideshow_4.initSlideshow_4(new SlideIN1(),new SlideIN2());
        slideshow_5.initSlideshow_5(new SlideIN1(),new SlideIN2());
        conn = (Connection) dbConnection.connect();
        conn1 = (Connection) dbConnection.connect();
        //SetTableAnnouncementData();
        Announcement_fetch();
        Technical_Staff_fetch();
        Announcement_Auto_AnnCode();       
        Technical_Staff_AnnCode();
        SearchTableConsumer();
        SearchConsumerUpdate();
        //TBL_View_Client_Payment_Update();
        Complaint_Table();

    }

    Connection conn;
    Connection conn1;
    Statement st;
    PreparedStatement pst;
    ResultSet rs;
    ArrayList<User> students = new ArrayList<>();
    ArrayList<PaymentUpdate> Payment_Update = new ArrayList<>();
    ArrayList<Complaint> complaints = new ArrayList<>();
    ArrayList<H_Payment_Update> h_payment_update = new ArrayList<>();
    ArrayList<TechnicalStaff> technicalstaffs = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Balance_NEW = new javax.swing.JTextField();
        BirthdayTEXT_Convert = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        WELCOME = new javax.swing.JLabel();
        jbClientInfo = new javax.swing.JButton();
        jbTechStaffInfo = new javax.swing.JButton();
        jbComplaits = new javax.swing.JButton();
        jbAnnouncements = new javax.swing.JButton();
        jbPayments = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        slideshow = new slideshow.Slideshow();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Client_Information = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        TXT_search_Consumer = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        SearchTableConsumer = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        slideshow_5 = new slideshow.Slideshow_5();
        Technecal_Staff_Information = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TBL_TechnecalStaff = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        First_NameTEXT = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        Last_NameTEXT = new javax.swing.JTextField();
        txtId1 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        Contact_NumberTEXT = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        Line_of_WorkTEXT = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        PositionTEXT = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        AddressStreetTEXT = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        Middle_NameTEXT = new javax.swing.JTextField();
        TechnecalInformation_BTNdelete = new javax.swing.JButton();
        TechnecalInformation_BTNUpdate = new javax.swing.JButton();
        TechnecalInformation_BTNAdd = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        tech_idTEXT = new javax.swing.JTextField();
        Birthday = new com.toedter.calendar.JDateChooser();
        AddressBarangayTEXT = new javax.swing.JTextField();
        AddressCity_municipalityTEXT = new javax.swing.JTextField();
        AddressProvinceTEXT = new javax.swing.JTextField();
        AddressZipcodeTEXT = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        TechnecalInformation_BTNClearF = new javax.swing.JButton();
        slideshow_4 = new slideshow.Slideshow_4();
        Complaints = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Complaint_Table = new javax.swing.JTable();
        slideshow_3 = new slideshow.Slideshow_3();
        ComSearch = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Announcements = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AnnouncementTable = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        AnnouncementTXT = new javax.swing.JTextField();
        DateTXT = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Announcements_1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TBL_Announcements = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Ann_Number_Code = new javax.swing.JTextField();
        Announcements_BTNSave = new javax.swing.JButton();
        Anouncements_BTNUpdate = new javax.swing.JButton();
        Anouncements_BTNDelete = new javax.swing.JButton();
        txtFname = new java.awt.TextArea();
        jLabel20 = new javax.swing.JLabel();
        Announcements_BTNClearF = new javax.swing.JButton();
        slideshow_2 = new slideshow.Slideshow_2();
        AnnSearch = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        Payment = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        Client_First_Name = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Client_Last_Name = new javax.swing.JTextField();
        Meter_Number = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        TXT_Balance_Update = new javax.swing.JTextField();
        UpdatePaymentBTN = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        SearchConsumerUpdate = new javax.swing.JTable();
        Balance_OLD = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        View_Client_Payment_Update = new javax.swing.JTable();
        slideshow_1 = new slideshow.Slideshow_1();

        BirthdayTEXT_Convert.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BirthdayTEXT_Convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BirthdayTEXT_ConvertActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        WELCOME.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        WELCOME.setText("Welcome");
        WELCOME.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WELCOMEMouseClicked(evt);
            }
        });

        jbClientInfo.setBackground(new java.awt.Color(255, 255, 0));
        jbClientInfo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbClientInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1.png"))); // NOI18N
        jbClientInfo.setToolTipText("");
        jbClientInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        jbClientInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClientInfoActionPerformed(evt);
            }
        });

        jbTechStaffInfo.setBackground(new java.awt.Color(255, 255, 0));
        jbTechStaffInfo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbTechStaffInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.png"))); // NOI18N
        jbTechStaffInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        jbTechStaffInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTechStaffInfoActionPerformed(evt);
            }
        });

        jbComplaits.setBackground(new java.awt.Color(255, 255, 0));
        jbComplaits.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbComplaits.setIcon(new javax.swing.ImageIcon(getClass().getResource("/3.png"))); // NOI18N
        jbComplaits.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        jbComplaits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbComplaitsActionPerformed(evt);
            }
        });

        jbAnnouncements.setBackground(new java.awt.Color(255, 255, 0));
        jbAnnouncements.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbAnnouncements.setIcon(new javax.swing.ImageIcon(getClass().getResource("/4.png"))); // NOI18N
        jbAnnouncements.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        jbAnnouncements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnnouncementsActionPerformed(evt);
            }
        });

        jbPayments.setBackground(new java.awt.Color(255, 255, 0));
        jbPayments.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbPayments.setIcon(new javax.swing.ImageIcon(getClass().getResource("/5.png"))); // NOI18N
        jbPayments.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        jbPayments.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPaymentsActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SUKELCO logo.png"))); // NOI18N

        jButton3.setBackground(new java.awt.Color(255, 255, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/6.png"))); // NOI18N
        jButton3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 51)));
        jButton3.setDisabledSelectedIcon(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(WELCOME)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbClientInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbTechStaffInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbComplaits, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbAnnouncements, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(WELCOME)
                .addGap(1, 1, 1)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbClientInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jbTechStaffInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbAnnouncements, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbComplaits, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jbPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 760));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HD.jpg"))); // NOI18N
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/262px.jpg"))); // NOI18N
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        slideshow.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText(">");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(slideshow, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(741, 741, 741)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(3035, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slideshow, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(36, 36, 36)
                .addComponent(jButton2)
                .addGap(200, 200, 200))
        );

        jTabbedPane1.addTab("tab1", jPanel2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Consumer Information");

        TXT_search_Consumer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TXT_search_Consumer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TXT_search_Consumer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_search_ConsumerActionPerformed(evt);
            }
        });
        TXT_search_Consumer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TXT_search_ConsumerKeyReleased(evt);
            }
        });

        SearchTableConsumer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SearchTableConsumer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SearchTableConsumer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meter ID ", "First Name", "Last Name", "Email", "Purok", "Barangay", "Totol KWH", "Building Type", "Balance", "Date Last Reading"
            }
        ));
        jScrollPane4.setViewportView(SearchTableConsumer);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Search Consumer Meter Number");

        javax.swing.GroupLayout Client_InformationLayout = new javax.swing.GroupLayout(Client_Information);
        Client_Information.setLayout(Client_InformationLayout);
        Client_InformationLayout.setHorizontalGroup(
            Client_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Client_InformationLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(Client_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addGroup(Client_InformationLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TXT_search_Consumer, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slideshow_5, javax.swing.GroupLayout.DEFAULT_SIZE, 1125, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap(3747, Short.MAX_VALUE))
        );
        Client_InformationLayout.setVerticalGroup(
            Client_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Client_InformationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slideshow_5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addGroup(Client_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TXT_search_Consumer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab5", Client_Information);

        TBL_TechnecalStaff.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TBL_TechnecalStaff.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TBL_TechnecalStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee No.", "Last Name", "First Name", "Middle Name", "Contact Number", "Address", "", "", "", "", "Birthday", "Line of Work", "Position"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBL_TechnecalStaff.setCellSelectionEnabled(true);
        TBL_TechnecalStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBL_TechnecalStaffMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(TBL_TechnecalStaff);
        TBL_TechnecalStaff.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel23.setText("Technecal Staff Information");

        First_NameTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel24.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel24.setText("Last Name");

        jLabel25.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel25.setText("First Name");

        Last_NameTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel26.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel26.setText("Contact Number");

        Contact_NumberTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Contact_NumberTEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Contact_NumberTEXTActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel27.setText("Line of Work");

        Line_of_WorkTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Line_of_WorkTEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Line_of_WorkTEXTActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel28.setText("Position");

        PositionTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel29.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel29.setText("Address");

        AddressStreetTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AddressStreetTEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressStreetTEXTActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel30.setText("Birthday");

        jLabel22.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel22.setText("Middle Name");

        Middle_NameTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        TechnecalInformation_BTNdelete.setBackground(new java.awt.Color(255, 0, 51));
        TechnecalInformation_BTNdelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        TechnecalInformation_BTNdelete.setText("Archive");
        TechnecalInformation_BTNdelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TechnecalInformation_BTNdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TechnecalInformation_BTNdeleteActionPerformed(evt);
            }
        });

        TechnecalInformation_BTNUpdate.setBackground(new java.awt.Color(0, 102, 204));
        TechnecalInformation_BTNUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        TechnecalInformation_BTNUpdate.setText("Update");
        TechnecalInformation_BTNUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TechnecalInformation_BTNUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TechnecalInformation_BTNUpdateActionPerformed(evt);
            }
        });

        TechnecalInformation_BTNAdd.setBackground(new java.awt.Color(255, 255, 102));
        TechnecalInformation_BTNAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        TechnecalInformation_BTNAdd.setText("Add");
        TechnecalInformation_BTNAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TechnecalInformation_BTNAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TechnecalInformation_BTNAddActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel31.setText("Id Number");

        tech_idTEXT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tech_idTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tech_idTEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tech_idTEXTActionPerformed(evt);
            }
        });

        Birthday.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AddressBarangayTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AddressCity_municipalityTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AddressProvinceTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AddressZipcodeTEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel34.setText("Street");

        jLabel35.setText("Barangay");

        jLabel36.setText("City/Municipality");

        jLabel37.setText("Province");

        jLabel38.setText("Zipcode");

        TechnecalInformation_BTNClearF.setBackground(new java.awt.Color(153, 153, 153));
        TechnecalInformation_BTNClearF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        TechnecalInformation_BTNClearF.setText("Clear Fields");
        TechnecalInformation_BTNClearF.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TechnecalInformation_BTNClearF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TechnecalInformation_BTNClearFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Technecal_Staff_InformationLayout = new javax.swing.GroupLayout(Technecal_Staff_Information);
        Technecal_Staff_Information.setLayout(Technecal_Staff_InformationLayout);
        Technecal_Staff_InformationLayout.setHorizontalGroup(
            Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                                .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel29))
                                .addGap(18, 18, 18)
                                .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                                        .addComponent(Middle_NameTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3241, 3241, 3241)
                                        .addComponent(txtId1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                                        .addComponent(Last_NameTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51)
                                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel27)
                                            .addComponent(jLabel28))
                                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(PositionTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Technecal_Staff_InformationLayout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(Line_of_WorkTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                                                .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(AddressStreetTEXT, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Contact_NumberTEXT, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Birthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                                                .addGap(10, 10, 10)
                                                .addComponent(AddressBarangayTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(AddressCity_municipalityTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(AddressProvinceTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(First_NameTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(10, 10, 10)
                                        .addComponent(AddressZipcodeTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                                    .addComponent(jLabel31)
                                    .addGap(18, 18, 18)
                                    .addComponent(tech_idTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(433, 433, 433)
                                    .addComponent(TechnecalInformation_BTNClearF, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(TechnecalInformation_BTNAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(TechnecalInformation_BTNUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(TechnecalInformation_BTNdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jLabel34)
                        .addGap(146, 146, 146)
                        .addComponent(jLabel35)
                        .addGap(111, 111, 111)
                        .addComponent(jLabel36)
                        .addGap(112, 112, 112)
                        .addComponent(jLabel37)
                        .addGap(137, 137, 137)
                        .addComponent(jLabel38))
                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(slideshow_4, javax.swing.GroupLayout.PREFERRED_SIZE, 1121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(1161, Short.MAX_VALUE))
        );
        Technecal_Staff_InformationLayout.setVerticalGroup(
            Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slideshow_4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TechnecalInformation_BTNUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TechnecalInformation_BTNdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Line_of_WorkTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TechnecalInformation_BTNClearF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TechnecalInformation_BTNAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tech_idTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Technecal_Staff_InformationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Technecal_Staff_InformationLayout.createSequentialGroup()
                                .addComponent(Last_NameTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(PositionTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(First_NameTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(txtId1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Technecal_Staff_InformationLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Middle_NameTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Contact_NumberTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Birthday, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(AddressStreetTEXT, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddressBarangayTEXT)
                            .addComponent(AddressCity_municipalityTEXT)
                            .addComponent(AddressProvinceTEXT)
                            .addComponent(AddressZipcodeTEXT))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Technecal_Staff_InformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", Technecal_Staff_Information);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Complaints");

        Complaint_Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Complaint_Table.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Complaint_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Contact", "Purok", "Barangay", "Town", "Request Type", "Request Info"
            }
        ));
        jScrollPane2.setViewportView(Complaint_Table);

        ComSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ComSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ComSearchKeyReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Search");

        javax.swing.GroupLayout ComplaintsLayout = new javax.swing.GroupLayout(Complaints);
        Complaints.setLayout(ComplaintsLayout);
        ComplaintsLayout.setHorizontalGroup(
            ComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComplaintsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(ComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ComplaintsLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1120, Short.MAX_VALUE)
                        .addComponent(slideshow_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(3752, Short.MAX_VALUE))
        );
        ComplaintsLayout.setVerticalGroup(
            ComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComplaintsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slideshow_3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab2", Complaints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Announcements");

        jButton7.setText("ADD");

        jButton8.setText("Update");

        AnnouncementTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Announcement", "SampleAnn1", "SampleAnn2"
            }
        ));
        jScrollPane1.setViewportView(AnnouncementTable);

        jButton12.setText("DELETE");

        AnnouncementTXT.setText(" ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Announcement");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Date");

        javax.swing.GroupLayout AnnouncementsLayout = new javax.swing.GroupLayout(Announcements);
        Announcements.setLayout(AnnouncementsLayout);
        AnnouncementsLayout.setHorizontalGroup(
            AnnouncementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnnouncementsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(AnnouncementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AnnouncementsLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(AnnouncementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addGap(67, 67, 67)
                        .addGroup(AnnouncementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AnnouncementTXT)
                            .addGroup(AnnouncementsLayout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addGap(140, 140, 140)
                                .addComponent(jButton8)
                                .addGap(135, 135, 135)
                                .addComponent(jButton12))
                            .addComponent(DateTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(4003, Short.MAX_VALUE))
        );
        AnnouncementsLayout.setVerticalGroup(
            AnnouncementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnnouncementsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(AnnouncementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AnnouncementTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(AnnouncementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(AnnouncementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton12))
                .addGap(71, 71, 71))
        );

        jTabbedPane1.addTab("tab3", Announcements);

        TBL_Announcements.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TBL_Announcements.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TBL_Announcements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Text", "Date"
            }
        ));
        TBL_Announcements.setCellSelectionEnabled(true);
        TBL_Announcements.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBL_AnnouncementsMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(TBL_Announcements);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel19.setText("Announcements");

        jLabel21.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel21.setText("Code");

        Ann_Number_Code.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Ann_Number_Code.setToolTipText("");
        Ann_Number_Code.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Ann_Number_Code.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        Announcements_BTNSave.setBackground(new java.awt.Color(255, 255, 102));
        Announcements_BTNSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Announcements_BTNSave.setText("Save");
        Announcements_BTNSave.setBorder(null);
        Announcements_BTNSave.setIconTextGap(0);
        Announcements_BTNSave.setInheritsPopupMenu(true);
        Announcements_BTNSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Announcements_BTNSaveActionPerformed(evt);
            }
        });

        Anouncements_BTNUpdate.setBackground(new java.awt.Color(0, 102, 204));
        Anouncements_BTNUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Anouncements_BTNUpdate.setText("Update");
        Anouncements_BTNUpdate.setBorder(null);
        Anouncements_BTNUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Anouncements_BTNUpdateActionPerformed(evt);
            }
        });

        Anouncements_BTNDelete.setBackground(new java.awt.Color(255, 0, 51));
        Anouncements_BTNDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Anouncements_BTNDelete.setText("Archive");
        Anouncements_BTNDelete.setBorder(null);
        Anouncements_BTNDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Anouncements_BTNDeleteActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel20.setText("Announcement Text");

        Announcements_BTNClearF.setBackground(new java.awt.Color(153, 153, 153));
        Announcements_BTNClearF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Announcements_BTNClearF.setText("Clear Fields");
        Announcements_BTNClearF.setBorder(null);
        Announcements_BTNClearF.setIconTextGap(0);
        Announcements_BTNClearF.setInheritsPopupMenu(true);
        Announcements_BTNClearF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Announcements_BTNClearFActionPerformed(evt);
            }
        });

        AnnSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AnnSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AnnSearchKeyReleased(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel32.setText("Search");

        javax.swing.GroupLayout Announcements_1Layout = new javax.swing.GroupLayout(Announcements_1);
        Announcements_1.setLayout(Announcements_1Layout);
        Announcements_1Layout.setHorizontalGroup(
            Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Announcements_1Layout.createSequentialGroup()
                .addGroup(Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(Announcements_1Layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addGroup(Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel21)
                                .addComponent(jLabel20))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(Announcements_1Layout.createSequentialGroup()
                                    .addComponent(Ann_Number_Code, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(84, 84, 84)
                                    .addComponent(Announcements_BTNClearF, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45)
                                    .addComponent(Announcements_BTNSave, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45)
                                    .addComponent(Anouncements_BTNUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45)
                                    .addComponent(Anouncements_BTNDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtFname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(Announcements_1Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addGroup(Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel19)
                                .addComponent(jScrollPane6)
                                .addComponent(slideshow_2, javax.swing.GroupLayout.DEFAULT_SIZE, 1123, Short.MAX_VALUE))))
                    .addGroup(Announcements_1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AnnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(3749, Short.MAX_VALUE))
        );
        Announcements_1Layout.setVerticalGroup(
            Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Announcements_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slideshow_2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AnnSearch)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGroup(Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Announcements_1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Announcements_1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Announcements_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Ann_Number_Code, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Announcements_BTNSave, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Announcements_BTNClearF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Anouncements_BTNUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Anouncements_BTNDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("tab7", Announcements_1);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Payment");

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        Client_First_Name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Client_First_Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Client First Name");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Client Last Name");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Meter Number");

        Client_Last_Name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Client_Last_Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Meter_Number.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Meter_Number.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Meter_Number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Meter_NumberKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Payment Amount");

        TXT_Balance_Update.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TXT_Balance_Update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        UpdatePaymentBTN.setBackground(new java.awt.Color(0, 102, 204));
        UpdatePaymentBTN.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UpdatePaymentBTN.setText("Update");
        UpdatePaymentBTN.setBorder(null);
        UpdatePaymentBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatePaymentBTNActionPerformed(evt);
            }
        });

        SearchConsumerUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SearchConsumerUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SearchConsumerUpdate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meter Number", "First Name", "Last Name", "Building", "Balance", "Date Last Reading"
            }
        ));
        SearchConsumerUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchConsumerUpdateMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(SearchConsumerUpdate);

        Balance_OLD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Balance");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(31, 31, 31)
                                .addComponent(Meter_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(UpdatePaymentBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12))
                            .addComponent(jLabel7)
                            .addComponent(jLabel14))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Client_Last_Name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(Client_First_Name, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TXT_Balance_Update, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Balance_OLD, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Meter_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(Client_First_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Client_Last_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Balance_OLD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TXT_Balance_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(26, 26, 26)
                .addComponent(UpdatePaymentBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Update Consumers Payment", jPanel8);

        View_Client_Payment_Update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        View_Client_Payment_Update.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meter Number", "Balance", "Date of update"
            }
        ));
        jScrollPane3.setViewportView(View_Client_Payment_Update);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("View All Consumers Payment History", jPanel9);

        javax.swing.GroupLayout PaymentLayout = new javax.swing.GroupLayout(Payment);
        Payment.setLayout(PaymentLayout);
        PaymentLayout.setHorizontalGroup(
            PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(slideshow_1, javax.swing.GroupLayout.PREFERRED_SIZE, 1118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(3719, Short.MAX_VALUE))
        );
        PaymentLayout.setVerticalGroup(
            PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slideshow_1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(11, 11, 11)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("tab5", Payment);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, -27, -1, 790));

        setSize(new java.awt.Dimension(1485, 798));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

//Complait
    private void jbComplaitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbComplaitsActionPerformed
jTabbedPane1.setSelectedIndex(3);
        //DefaultTableModel model = (DefaultTableModel) View_Client_Payment_Update.getModel();
       // model.setRowCount(0);
       //Complaint_Table();
    }//GEN-LAST:event_jbComplaitsActionPerformed

//ClientInfo
    private void jbClientInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClientInfoActionPerformed
jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jbClientInfoActionPerformed
public void searchConsumer(String str){
        DefaultTableModel model = (DefaultTableModel) SearchTableConsumer.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        SearchTableConsumer.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
}
//Announcement MODIF
    private void jbAnnouncementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnnouncementsActionPerformed
jTabbedPane1.setSelectedIndex(5);

    }//GEN-LAST:event_jbAnnouncementsActionPerformed

//TechStaffInfo
    private void jbTechStaffInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTechStaffInfoActionPerformed
jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jbTechStaffInfoActionPerformed

//Wellcome
    private void WELCOMEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WELCOMEMouseClicked
 jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_WELCOMEMouseClicked

//PAYMENT
    private void jbPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPaymentsActionPerformed
jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_jbPaymentsActionPerformed
public void searchConsumerUpdate(String str){
        DefaultTableModel model = (DefaultTableModel) SearchConsumerUpdate.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        SearchConsumerUpdate.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
        
        
        
        /*
         try {
             
             
            pst = conn.prepareStatement("select meterid,firstname,lastname, customerbalance from users where meterid=? ");
        
            int meterid = Integer.parseInt(Meter_Number.getText());
            pst.setInt(1, meterid);
            rs = pst.executeQuery();
            if(rs.next()==false)
            {
                //JOptionPane.showMessageDialog(this, "Sorry Record Not Found");
                Meter_Number.requestFocus();
                Client_First_Name.setText("");
                Client_Last_Name.setText("");
                Balance_OLD.setText("");
                
            }
            else
            {
                Client_First_Name.setText(rs.getString("firstname"));
                Client_Last_Name.setText(rs.getString("lastname"));
                Balance_OLD.setText(rs.getString("customerbalance"));
            }
        } catch (SQLException ex) {
            // Logger.getLogger(SearchJdbc.class.getName()).log(Level.SEVERE, null, ex);
        }    
        */
}  
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
    public void tbl_Announcements(String str){
        DefaultTableModel model = (DefaultTableModel) TBL_Announcements.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        TBL_Announcements.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
     public void complaint_Table(String str){
        DefaultTableModel model = (DefaultTableModel) Complaint_Table.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        Complaint_Table.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }


    
/////////////////////////////////////   Announcement    ///////////////////////////////////////////////////////
    private void Announcements_BTNSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Announcements_BTNSaveActionPerformed
        String AnnCode = Ann_Number_Code.getText();
        String Ann_Text = txtFname.getText();

        if (!Ann_Text.isEmpty()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/user1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
                String sql = "select * from student";
                st = conn1.createStatement();
                ResultSet rs = st.executeQuery(sql);

                if (rs.first()) {
                    Announcement_saveUser(Ann_Text, AnnCode);
                    DefaultTableModel model = (DefaultTableModel) TBL_Announcements.getModel();
                    
                    //
                    Object[] row = new Object[4];
                    row[0] = AnnCode;
                    row[1] = Ann_Text;
                   model.addRow(row);
model.setRowCount(0);                   
                    Announcement_fetch();
                    
                } else {
                    alert("Please provide a different id number");
                }

            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    conn1.close();
                    st.close();  
                    
                } catch (SQLException ex) {
                }
            }
        } 
        else {
            alert("please fill in all the details");
        }        
    }//GEN-LAST:event_Announcements_BTNSaveActionPerformed

    private void Anouncements_BTNUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Anouncements_BTNUpdateActionPerformed
        String AnnCode = Ann_Number_Code.getText().trim();
        String Ann_Text = txtFname.getText().trim();
        
        if (!AnnCode.isEmpty()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/user1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
                String sql = "select * from student where AnnCode='" + AnnCode + "'";
                st = conn1.createStatement();
                ResultSet rs = st.executeQuery(sql);
                if (rs.first()) {
                    Announcement_update(AnnCode, Ann_Text);
                    DefaultTableModel model = (DefaultTableModel) TBL_Announcements.getModel();
                    model.setRowCount(0);                   
                    Announcement_fetch();
                    alert("Update was successful");
                    
                } else {
                    alert("There is no such student", "Update error");
                    clear_tech();
                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            alert("There is nothing to update :(","No row selected");
        }
    }//GEN-LAST:event_Anouncements_BTNUpdateActionPerformed

    private void Anouncements_BTNDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Anouncements_BTNDeleteActionPerformed
        int i = TBL_Announcements.getSelectedRow();
        if (i >= 0) {
            int option = JOptionPane.showConfirmDialog(rootPane,
                    "Are you sure you want to Archive?", "Archive confirmation", JOptionPane.YES_NO_OPTION);
            if (option == 0) {
                TableModel model = TBL_Announcements.getModel();

                String AnnConde = model.getValueAt(i, 0).toString();////////////////////////////////////////////////////2
                if (TBL_Announcements.getSelectedRows().length == 1) {
                    Announcement_delete(AnnConde);
                    DefaultTableModel model1 = (DefaultTableModel) TBL_Announcements.getModel();
                    model1.setRowCount(0);
                    Announcement_fetch();
                    clear();
                }
            }
        } else {
            alert("Please select a row to Archive");
        }
    }//GEN-LAST:event_Anouncements_BTNDeleteActionPerformed

//////////////////////////////////////  Technical Staff Informantion    /////////////////////////////////////
    @SuppressWarnings("empty-statement")
    private void TechnecalInformation_BTNUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TechnecalInformation_BTNUpdateActionPerformed
        String seletdate=((JTextField)Birthday.getDateEditor().getUiComponent()).getText();
        BirthdayTEXT_Convert.setText(seletdate);
        
        String tech_id = tech_idTEXT.getText().trim();;
        String Last_Name = Last_NameTEXT.getText().trim();;
        String First_Name = First_NameTEXT.getText().trim();;
        String Middle_Name = Middle_NameTEXT.getText().trim();;
        String Contact_Number = Contact_NumberTEXT.getText().trim();;
        
        String AddressStreet = AddressStreetTEXT.getText().trim();;
        String AddressBarangay = AddressBarangayTEXT.getText().trim();;
        String AddressCity_municipality = AddressCity_municipalityTEXT.getText().trim();;
        String AddressProvince = AddressProvinceTEXT.getText().trim();;
        String AddressZipcode = AddressZipcodeTEXT.getText().trim();;
        
        String Birthday = BirthdayTEXT_Convert.getText().trim();;    
        String Line_of_Work = Line_of_WorkTEXT.getText().trim();;
        String Position = PositionTEXT.getText().trim();;
        if (!tech_id.isEmpty()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummysystemtest?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","");
                String sql = "select * from technical_staff_information where tech_id='" + tech_id + "'";
                st = conn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                if (rs.first()) {
                    Technical_Staff_update(tech_id, Last_Name, First_Name, Middle_Name, Contact_Number, AddressStreet, AddressBarangay, AddressCity_municipality, AddressProvince, AddressZipcode, Birthday, Line_of_Work, Position);
                    DefaultTableModel model = (DefaultTableModel) TBL_TechnecalStaff.getModel();
                    model.setRowCount(0);                   
                    Technical_Staff_fetch();
                    alert("Update was successful");
                    
                } else {
                    alert("There is no such record", "Update error");
                    clear_tech();
                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            alert("There is nothing to update :(","No row selected");
        }
    }//GEN-LAST:event_TechnecalInformation_BTNUpdateActionPerformed

    private void TechnecalInformation_BTNdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TechnecalInformation_BTNdeleteActionPerformed
        int i = TBL_TechnecalStaff.getSelectedRow();
        if (i >= 0) {
            int option = JOptionPane.showConfirmDialog(rootPane,
                    "Are you sure you want to Archive?", "Archive confirmation", JOptionPane.YES_NO_OPTION);
            if (option == 0) {
                TableModel model = TBL_TechnecalStaff.getModel();

                String tech_id = model.getValueAt(i, 0).toString();
                if (TBL_TechnecalStaff.getSelectedRows().length == 1) {
                    Technical_Staff_delete(tech_id);
                    DefaultTableModel model1 = (DefaultTableModel) TBL_TechnecalStaff.getModel();
                    model1.setRowCount(0);
                    Technical_Staff_fetch();
                    clear_tech();
                }
            }
        } else {
            alert("Please select a row to Archive");
        }
    }//GEN-LAST:event_TechnecalInformation_BTNdeleteActionPerformed
//technical staff TBL
    private void TBL_TechnecalStaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBL_TechnecalStaffMouseClicked

         int i = TBL_TechnecalStaff.getSelectedRow();
        TableModel model = TBL_TechnecalStaff.getModel();
        tech_idTEXT.setText(model.getValueAt(i, 0).toString());
        Last_NameTEXT.setText(model.getValueAt(i, 1).toString());
        First_NameTEXT.setText(model.getValueAt(i, 2).toString());
        Middle_NameTEXT.setText(model.getValueAt(i, 3).toString());
        Contact_NumberTEXT.setText(model.getValueAt(i, 4).toString());
        
        AddressStreetTEXT.setText(model.getValueAt(i, 5).toString());
        AddressBarangayTEXT.setText(model.getValueAt(i, 6).toString());
        AddressCity_municipalityTEXT.setText(model.getValueAt(i, 7).toString());
        AddressProvinceTEXT.setText(model.getValueAt(i, 8).toString());
        AddressZipcodeTEXT.setText(model.getValueAt(i, 9).toString());
        
        BirthdayTEXT_Convert.setText(model.getValueAt(i, 10).toString());
        Line_of_WorkTEXT.setText(model.getValueAt(i, 11).toString());
        PositionTEXT.setText(model.getValueAt(i, 12).toString());
    }//GEN-LAST:event_TBL_TechnecalStaffMouseClicked

    
    
//////////////////////////////////////////////NEWWWWWWWWWWWWWWWWWWWW///////////////////////////////////////////////////////////////
    
    
    private void TBL_AnnouncementsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBL_AnnouncementsMouseClicked
        int i = TBL_Announcements.getSelectedRow();
        TableModel model = TBL_Announcements.getModel();
        Ann_Number_Code.setText(model.getValueAt(i, 0).toString());
        txtFname.setText(model.getValueAt(i, 1).toString());
    }//GEN-LAST:event_TBL_AnnouncementsMouseClicked
//// Technical Staff Informantion ADD
    private void TechnecalInformation_BTNAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TechnecalInformation_BTNAddActionPerformed
        
        String seletdate=((JTextField)Birthday.getDateEditor().getUiComponent()).getText();
        BirthdayTEXT_Convert.setText(seletdate);
        
        String tech_id = tech_idTEXT.getText();
        String Last_Name = Last_NameTEXT.getText();
        String First_Name = First_NameTEXT.getText();
        String Middle_Name = Middle_NameTEXT.getText();
        String Contact_Number = Contact_NumberTEXT.getText();
        
        String AddressStreet = AddressStreetTEXT.getText();
        String AddressBarangay = AddressBarangayTEXT.getText();
        String AddressCity_municipality = AddressCity_municipalityTEXT.getText();
        String AddressProvince = AddressProvinceTEXT.getText();
        String AddressZipcode = AddressZipcodeTEXT.getText();
        
        String Birthday = BirthdayTEXT_Convert.getText();
        String Line_of_Work = Line_of_WorkTEXT.getText();
        String Position = PositionTEXT.getText();
       
        if (!tech_id.isEmpty()) { ///////////////////////////adddddddd///////////
            try {
                Class.forName("com.mysql.jdbc.Driver");
                conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummysystemtest?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
                String sql = "select * from technical_staff_information";
                st = conn.createStatement();
                ResultSet rs = st.executeQuery(sql);

                if (rs.first()) {
                   Technical_Staff_Add(tech_id, Last_Name, First_Name, Middle_Name, Contact_Number, AddressStreet, AddressBarangay, AddressCity_municipality, AddressProvince, AddressZipcode, Birthday, Line_of_Work, Position);
                    DefaultTableModel model = (DefaultTableModel) TBL_TechnecalStaff.getModel();
                    Object[] row = new Object[14];
                    row[0] = tech_id;
                    row[1] = Last_Name;
                    row[2] = First_Name;
                    row[3] = Middle_Name;
                    row[4] = Contact_Number;
                    
                    row[5] = AddressStreet;
                    row[6] = AddressBarangay;
                    row[7] = AddressCity_municipality;
                    row[8] = AddressProvince;
                    row[9] = AddressZipcode;
                    
                    row[10] = Birthday;
                    row[11] = Line_of_Work;
                    row[12] = Position;
                   
                    model.addRow(row);
                } else {
                    alert("Please provide a different id number");
                }

            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    conn.close();
                    st.close();   
                } catch (SQLException ex) {
                }
            }
        } 
        else {
            alert("please fill in all the details");
        }        
    }//GEN-LAST:event_TechnecalInformation_BTNAddActionPerformed

    private void tech_idTEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tech_idTEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tech_idTEXTActionPerformed

    private void Line_of_WorkTEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Line_of_WorkTEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Line_of_WorkTEXTActionPerformed

    private void Contact_NumberTEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Contact_NumberTEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Contact_NumberTEXTActionPerformed

    private void AddressStreetTEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressStreetTEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressStreetTEXTActionPerformed

    private void BirthdayTEXT_ConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BirthdayTEXT_ConvertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BirthdayTEXT_ConvertActionPerformed

    private void TXT_search_ConsumerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXT_search_ConsumerKeyReleased
        String searchString = TXT_search_Consumer.getText();
        searchConsumer(searchString);
    }//GEN-LAST:event_TXT_search_ConsumerKeyReleased

    private void TXT_search_ConsumerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_search_ConsumerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_search_ConsumerActionPerformed

    private void Meter_NumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Meter_NumberKeyReleased
        String searchString = Meter_Number.getText();
        searchConsumerUpdate(searchString); 
    }//GEN-LAST:event_Meter_NumberKeyReleased

    private void UpdatePaymentBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePaymentBTNActionPerformed
        int option = JOptionPane.showConfirmDialog(rootPane,
                    "Are you sure you want to Update the Balance?", "Payment confirmation", JOptionPane.YES_NO_OPTION);
          if (option == 0) {
               
        Float a,b,c;
        
        a= Float.parseFloat(Balance_OLD.getText());
        b= Float.parseFloat(TXT_Balance_Update.getText());
        c=a-b;
        Balance_NEW.setText(""+c);
        
        String STRMeterNumber = Meter_Number.getText().trim();
        String NewBalance = Balance_NEW.getText().trim();
         try {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/sukelco_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","");
            String sql = "UPDATE `users`SET customerbalance='" + NewBalance + "'WHERE 	meterid='" + STRMeterNumber + "'";
           
            //st = conn.createStatement();
            //st.execute(sql);
            //st.executeUpdate(sql);
            
            st = conn.createStatement();
            st.execute(sql);
           
        
           
            DefaultTableModel model = (DefaultTableModel) SearchConsumerUpdate.getModel();
            model.setRowCount(0);     
            SearchConsumerUpdate();
            TBL_View_Client_Payment_Update();
            clear_PaymentUpdate();
            
            
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
          }else {
            alert("You cancel the Update");
        }
    }//GEN-LAST:event_UpdatePaymentBTNActionPerformed

    private void TechnecalInformation_BTNClearFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TechnecalInformation_BTNClearFActionPerformed
        // TODO add your handling code here:
        clear_tech();
    }//GEN-LAST:event_TechnecalInformation_BTNClearFActionPerformed

    private void Announcements_BTNClearFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Announcements_BTNClearFActionPerformed
        clear();
    }//GEN-LAST:event_Announcements_BTNClearFActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        slideshow.next();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        slideshow.back();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SearchConsumerUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchConsumerUpdateMouseClicked
        int i = SearchConsumerUpdate.getSelectedRow();
        TableModel model = SearchConsumerUpdate.getModel();
        Meter_Number.setText(model.getValueAt(i, 0).toString());
        Client_First_Name.setText(model.getValueAt(i, 1).toString());
        Client_Last_Name.setText(model.getValueAt(i, 2).toString());
        Balance_OLD.setText(model.getValueAt(i, 4).toString());
        
    }//GEN-LAST:event_SearchConsumerUpdateMouseClicked

    private void AnnSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AnnSearchKeyReleased
        String searchString = AnnSearch.getText();
        tbl_Announcements(searchString); 
    }//GEN-LAST:event_AnnSearchKeyReleased

    private void ComSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComSearchKeyReleased
        String searchString = ComSearch.getText();
        complaint_Table(searchString); 
    }//GEN-LAST:event_ComSearchKeyReleased

//CALL FUNCTIONS/////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

    //method to show an info alert
    public void alert(String msg) {
        JOptionPane.showMessageDialog(rootPane, msg);
    }
    //method to show an error alert
    public void alert(String msg, String title) {
        JOptionPane.showMessageDialog(rootPane, msg, title, JOptionPane.ERROR_MESSAGE);
    }
    //Clear
    private void clear() {
        txtFname.setText(""); 
    }
    private void clear_tech(){
        Last_NameTEXT.setText("");
        First_NameTEXT.setText("");
        Middle_NameTEXT.setText("");
        Contact_NumberTEXT.setText("");
        
        AddressStreetTEXT.setText("");
        AddressBarangayTEXT.setText("");
        AddressCity_municipalityTEXT.setText("");
        AddressProvinceTEXT.setText("");
        AddressZipcodeTEXT.setText("");
        
        Birthday.setCalendar(null);
        BirthdayTEXT_Convert.setText("");
        Line_of_WorkTEXT.setText("");
        PositionTEXT.setText("");
    }
    private void clear_PaymentUpdate(){
        Meter_Number.setText("");
        Client_First_Name.setText("");
        Client_Last_Name.setText("");
        TXT_Balance_Update.setText("");
        
        Balance_OLD.setText("");
        Balance_NEW.setText("");
    }
    
    
    ///////////////////////////////// Announcement CALL FUNCTIONS/////////////////////////////////////
    //method to save user to the db
    public void Announcement_saveUser(String Ann_Text, String AnnCode) {
        try {
            conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/user1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
            java.sql.Statement smt = conn1.createStatement();
            smt.execute("INSERT INTO student (`Ann_Text`, `AnnCode`) VALUES ('" + Ann_Text + "', '" + AnnCode + "')");
            JOptionPane.showMessageDialog(this, "Record Added");
            txtFname.setText("");
            Announcement_Auto_AnnCode();

            smt.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }
    //update the db
    public void Announcement_update(String AnnCode,String Ann_Text ) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/user1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
            String sql = "UPDATE `student`SET Ann_Text='" + Ann_Text + "'WHERE AnnCode='" + AnnCode + "'";
            st = conn1.createStatement();
            st.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //delete details in the db
    public void Announcement_delete(String AnnCode) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/user1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
            String sql = "DELETE FROM `student` WHERE AnnCode='" + AnnCode + "'";
            st = conn1.createStatement();
            st.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //fetch 
    private void Announcement_fetch() {
        students.clear();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/user1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
            String sql = "select * from student";
            st = conn1.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                User user = new User(rs.getString("AnnCode"), rs.getString("Ann_Text"), rs.getString("AnnDate"));
                students.add(user);
            }
            DefaultTableModel model = (DefaultTableModel) TBL_Announcements.getModel();
            for (User user : students) {
                Object[] row = new Object[4];
                row[0] = user.getAnn_Code();
                row[1] = user.getFname();     
                row[2] = user.getAnnDate();
                model.addRow(row);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //AoutoGenerate
    public void Announcement_Auto_AnnCode(){
        try{
             Class.forName("com.mysql.jdbc.Driver");
                conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/user1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
                st = conn1.createStatement();
                ResultSet rs = st.executeQuery("select Max(AnnCode) from student");
                rs.next();
                if(rs.getString("Max(AnnCode)")==null)
                {
                    Ann_Number_Code.setText("X0001");
                }else{
                    Long AnnCode = Long.parseLong(rs.getString("Max(AnnCode)").substring(2,rs.getString("Max(AnnCode)").length()));
                    AnnCode++;
                    Ann_Number_Code.setText("X0" + String.format("%03d",AnnCode)); 
                }
            
        }catch(ClassNotFoundException | SQLException ex){
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
        ///////////////////////////////// Technical Staff Information CALL FUNCTIONS/////////////////////////////////////
    //method to save user to the db
    public void Technical_Staff_Add(String tech_id, String Last_Name, String First_Name, String Middle_Name, String Contact_Number, String AddressStreet, String AddressBarangay, String AddressCity_municipality, String AddressProvince, String AddressZipcode, String Birthday, String Line_of_Work, String Position) {
        try {
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummysystemtest?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
            java.sql.Statement smt = conn.createStatement();
            smt.execute("INSERT INTO technical_staff_information (`tech_id`, `Last_Name`, `First_Name`, `Middle_Name`, `Contact_Number`, `AddressStreet`, `AddressBarangay`, `AddressCity_municipality`, `AddressProvince`, `AddressZipcode`, `Birthday`, `Line_of_Work`, `Position`) VALUES ('" + tech_id + "', '" + Last_Name + "','" + First_Name + "','" + Middle_Name+ "','" + Contact_Number + "','" + AddressStreet + "','" + AddressBarangay + "','" + AddressCity_municipality + "','" + AddressProvince + "','" + AddressZipcode + "','" + Birthday + "','" + Line_of_Work + "','" + Position + "')");
            JOptionPane.showMessageDialog(this, "Record Added");
            //tech_idTEXT.setText("");
            Last_NameTEXT.setText("");
            First_NameTEXT.setText("");
            Middle_NameTEXT.setText("");
            Contact_NumberTEXT.setText("");
            
            AddressStreetTEXT.setText("");
            AddressBarangayTEXT.setText("");
            AddressCity_municipalityTEXT.setText("");
            AddressProvinceTEXT.setText("");
            AddressZipcodeTEXT.setText("");
            
            BirthdayTEXT_Convert.setText("");
            Line_of_WorkTEXT.setText("");
            PositionTEXT.setText("");
            Technical_Staff_AnnCode();
            clear_tech();
            smt.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }    
    
    //update the db
    public void Technical_Staff_update(String tech_id, String Last_Name, String First_Name, String Middle_Name, String Contact_Number, String AddressStreet, String AddressBarangay, String AddressCity_municipality, String AddressProvince, String AddressZipcode, String Birthday, String Line_of_Work, String Position) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummysystemtest?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","");            
            String sql = "UPDATE `technical_staff_information`SET Last_Name ='" + Last_Name + "',First_Name ='" + First_Name + "',Middle_Name ='" + Middle_Name + "',Contact_Number ='" + Contact_Number + "',AddressStreet ='" + AddressStreet + "', AddressBarangay ='" + AddressBarangay + "', AddressCity_municipality ='" + AddressCity_municipality + "', AddressProvince ='" + AddressProvince + "', AddressZipcode ='" + AddressZipcode + "', Birthday ='" + Birthday + "',Line_of_Work ='" + Line_of_Work + "',Position ='" + Position + "'WHERE tech_id ='" + tech_id + "'";
            st = conn.createStatement();
            st.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //delete details in the db
    public void Technical_Staff_delete(String tech_id){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummysystemtest?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
            String sql = "DELETE FROM `technical_staff_information` WHERE tech_id='" + tech_id + "'";
            st = conn.createStatement();
            st.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //fetch 
    private void Technical_Staff_fetch() {
        technicalstaffs.clear();
        try {
            Class.forName("com.mysql.jdbc.Driver");
           conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummysystemtest?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
            String sql = "select * from technical_staff_information";
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                TechnicalStaff technicalstaff = new TechnicalStaff(rs.getString("tech_id"), rs.getString("Last_Name"), rs.getString("First_Name"),rs.getString("Middle_Name"),rs.getString("Contact_Number"),rs.getString("AddressStreet"),rs.getString("AddressBarangay"),rs.getString("AddressCity_municipality"),rs.getString("AddressProvince"),rs.getString("AddressZipcode"),rs.getString("Birthday"),rs.getString("Line_of_Work"),rs.getString("Position"));
                technicalstaffs.add(technicalstaff);
            }
            DefaultTableModel model = (DefaultTableModel) TBL_TechnecalStaff.getModel();
            for (TechnicalStaff technicalstaff : technicalstaffs) {
                Object[] row = new Object[14];
                row[0] = technicalstaff.gettech_id();
                row[1] = technicalstaff.getLast_Name();     
                row[2] = technicalstaff.getFirst_Name();
                row[3] = technicalstaff.getMiddle_Name();
                row[4] = technicalstaff.getContact_Number();  
                
                row[5] = technicalstaff.getAddressStreet();
                row[6] = technicalstaff.getAddressBarangay();
                row[7] = technicalstaff.getAddressCity_municipality();
                row[8] = technicalstaff.getAddressProvince();
                row[9] = technicalstaff.getAddressZipcode();
                
                row[10] = technicalstaff.getBirthday();
                row[11] = technicalstaff.getLine_of_Work();     
                row[12] = technicalstaff.getPosition();
                model.addRow(row);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }   
     
    //AoutoGenerate
    public void Technical_Staff_AnnCode(){
        try{
             Class.forName("com.mysql.jdbc.Driver");
                conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummysystemtest?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
                st = conn.createStatement();
                ResultSet rs = st.executeQuery("select Max(tech_id) from technical_staff_information");
                rs.next();
                if(rs.getString("Max(tech_id)")==null)
                {
                    tech_idTEXT.setText("Y0001");
                }else{
                    Long tech_id = Long.parseLong(rs.getString("Max(tech_id)").substring(2,rs.getString("Max(tech_id)").length()));
                    tech_id++;
                    tech_idTEXT.setText("Y0" + String.format("%03d",tech_id)); 
                }
        }catch(ClassNotFoundException | SQLException ex){
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
//AoutoGenerate_SearchTableConsumer
    public void SearchTableConsumer(){
        try{
    Class.forName("com.mysql.jdbc.Driver");
     conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/sukelco_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
     String sql = "select * from  users";
     st = conn.createStatement();
     ResultSet rs1 = st.executeQuery(sql);
    
    while(rs1.next()){
        String Meterid = rs1.getString("meterid"); 
        String Firstname = rs1.getString("firstname"); 
        String Lastname = rs1.getString("lastname"); 
        String Email = rs1.getString("email"); 
        String Purok = rs1.getString("purok"); 
        String Barangay = rs1.getString("barangay"); 
        String TotalKWH = rs1.getString("totalKWH"); 
        String Buildingtype = rs1.getString("buildingtype"); 
        String Customerbalance = rs1.getString("customerbalance"); 
        String DateLastMeasured = rs1.getString("dateLastMeasured"); 

        
        Object[] obj = {Meterid,Firstname,Lastname,Email,Purok,Barangay,TotalKWH,Buildingtype,Customerbalance,DateLastMeasured};
        DefaultTableModel model = (DefaultTableModel) SearchTableConsumer.getModel();
        model.addRow(obj);
    }
}
catch (ClassNotFoundException | SQLException e){
}
    }
//AoutoGenerate_SearchConsumerUpdate
     public void SearchConsumerUpdate(){
         try{
     Class.forName("com.mysql.jdbc.Driver");
     conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/sukelco_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
     String sql = "select * from  users";
     st = conn.createStatement();
     ResultSet rs1 = st.executeQuery(sql);
    
    while(rs1.next()){
        //String id = rs1.getString("id");
        //String F_name = rs1.getString("F_name");
        //String L_name = rs1.getString("L_name");
        //String Balance = rs1.getString("Balance");  
        String Meterid = rs1.getString("meterid"); 
        String Firstname = rs1.getString("firstname"); 
        String Lastname = rs1.getString("lastname"); 
        String Buildingtype = rs1.getString("buildingtype"); 
        String Customerbalance = rs1.getString("customerbalance"); 
        String DateLastMeasured = rs1.getString("dateLastMeasured"); 

        
        Object[] obj = {Meterid,Firstname,Lastname,Buildingtype,Customerbalance,DateLastMeasured};
        DefaultTableModel model = (DefaultTableModel) SearchConsumerUpdate.getModel();
        model.addRow(obj);
    }
}
catch (ClassNotFoundException | SQLException e){
}
     }
     
     //AoutoGenerate_TBL_Announcements
public void TBL_Announcements(){
         try{
     Class.forName("com.mysql.jdbc.Driver");
     conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/user1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
     String sql = "select * from student";
     st = conn1.createStatement();
     ResultSet rs1 = st.executeQuery(sql);
    
    while(rs1.next()){ 
        String annCode = rs1.getString("AnnCode"); 
        String ann_Text = rs1.getString("Ann_Text"); 
        String annDate = rs1.getString("AnnDate"); 

        
        Object[] obj = {annCode,ann_Text,annDate};
        DefaultTableModel model = (DefaultTableModel) TBL_Announcements.getModel();
        model.addRow(obj);
    }
}
catch (ClassNotFoundException | SQLException e){
}
     }
//AoutoGenerate_Complaint_Table
public void SComplaint_Table(){
         try{
     Class.forName("com.mysql.jdbc.Driver");
     conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sukelco_feedback_reports?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
     String sql = "select * from requests";
     st = conn.createStatement();
     ResultSet rs1 = st.executeQuery(sql);
    
    while(rs1.next()){ 
        String Id = rs1.getString("id "); 
        String Name = rs1.getString("name"); 
        String Purok = rs1.getString("purok"); 
        String Barangay = rs1.getString("barangay"); 
        String Town = rs1.getString("town"); 
        String Requesttype = rs1.getString("requesttype"); 
        String Requestinfo = rs1.getString("requestinfo"); 
        String Contact = rs1.getString("contact"); 

        
        Object[] obj = {Id,Name,Purok,Barangay,Town,Requesttype,Requestinfo,Contact};
        DefaultTableModel model = (DefaultTableModel) Complaint_Table.getModel();
        model.addRow(obj);
    }
}
catch (ClassNotFoundException | SQLException e){
}
     }

         ///////////////////////////////// PaymentUpdate CALL FUNCTIONS/////////////////////////////////////
    public void TBL_View_Client_Payment_Update(){
            //DefaultTableModel model = (DefaultTableModel) View_Client_Payment_Update.getModel();
            h_payment_update.clear();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/sukelco_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
            String sql = "select * from  update_history";
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                H_Payment_Update h_payment_updates = new H_Payment_Update( rs.getString("Meter_Number"), rs.getString("Balance"), rs.getString("DateOfUpDate"));
                h_payment_update.add(h_payment_updates);
            }
 DefaultTableModel model = (DefaultTableModel) View_Client_Payment_Update.getModel();
                for (H_Payment_Update h_payment_updates : h_payment_update) {
                Object[] row = new Object[4];
                //row[0] = complaint.getid();
                row[0] = h_payment_updates.getMeter_Number();     
                row[1] = h_payment_updates.getBalance();
                
                row[2] = h_payment_updates.getDateOfUpdate();
                
                model.addRow(row);
            }
                } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }       
//fetch_PaymentUpdate///////////////////////////////////////////////////////////no function
    private void PaymentUpdate_fetch() {
        Payment_Update.clear();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummysystemtest?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
            String sql = "select * from  client_info";
            st = conn.createStatement();
            ResultSet rs1 = st.executeQuery(sql);
            while (rs.next()) {
                PaymentUpdate paymentupdate = new PaymentUpdate(rs.getString("id"), rs.getString("F_name"), rs.getString("L_name"), rs.getString("Balance"));
                Payment_Update.add(paymentupdate);
            }
            DefaultTableModel model = (DefaultTableModel) SearchConsumerUpdate.getModel();
            for (PaymentUpdate paymentupdate : Payment_Update) {
                Object[] row = new Object[5];
                row[0] = paymentupdate.getid();
                row[1] = paymentupdate.getF_name();     
                row[2] = paymentupdate.getL_name();
                row[3] = paymentupdate.getBalance();
                model.addRow(row);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    ///////////////////////////////// Complaint CALL FUNCTIONS/////////////////////////////////////
    public void Complaint_Table(){
     DefaultTableModel model = (DefaultTableModel) Complaint_Table.getModel();
            complaints.clear();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/sukelco_feedback_reports?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root",""); 
            String sql = "select * from  requests order by requesttype";
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Complaint complaint = new Complaint(rs.getString("name"), rs.getString("contact"), rs.getString("purok"), rs.getString("barangay"), rs.getString("town"), rs.getString("requesttype"), rs.getString("requestinfo"));
                complaints.add(complaint);
            }
 
                for (Complaint complaint : complaints) {
                Object[] row = new Object[8];
                //row[0] = complaint.getid();
                row[0] = complaint.getname();     
                row[1] = complaint.getcontact();
                row[2] = complaint.getpurok();
                row[3] = complaint.getbarangay();
                row[4] = complaint.gettown();
                row[5] = complaint.getrequesttype();
                row[6] = complaint.getrequestinfo();
                
                model.addRow(row);
            }
                } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
}
     
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressBarangayTEXT;
    private javax.swing.JTextField AddressCity_municipalityTEXT;
    private javax.swing.JTextField AddressProvinceTEXT;
    private javax.swing.JTextField AddressStreetTEXT;
    private javax.swing.JTextField AddressZipcodeTEXT;
    private javax.swing.JTextField AnnSearch;
    private javax.swing.JTextField Ann_Number_Code;
    private javax.swing.JTextField AnnouncementTXT;
    private javax.swing.JTable AnnouncementTable;
    private javax.swing.JPanel Announcements;
    private javax.swing.JPanel Announcements_1;
    private javax.swing.JButton Announcements_BTNClearF;
    private javax.swing.JButton Announcements_BTNSave;
    private javax.swing.JButton Anouncements_BTNDelete;
    private javax.swing.JButton Anouncements_BTNUpdate;
    private javax.swing.JTextField Balance_NEW;
    private javax.swing.JTextField Balance_OLD;
    private com.toedter.calendar.JDateChooser Birthday;
    private javax.swing.JTextField BirthdayTEXT_Convert;
    private javax.swing.JTextField Client_First_Name;
    private javax.swing.JPanel Client_Information;
    private javax.swing.JTextField Client_Last_Name;
    private javax.swing.JTextField ComSearch;
    private javax.swing.JTable Complaint_Table;
    private javax.swing.JPanel Complaints;
    private javax.swing.JTextField Contact_NumberTEXT;
    private javax.swing.JTextField DateTXT;
    private javax.swing.JTextField First_NameTEXT;
    private javax.swing.JTextField Last_NameTEXT;
    private javax.swing.JTextField Line_of_WorkTEXT;
    private javax.swing.JTextField Meter_Number;
    private javax.swing.JTextField Middle_NameTEXT;
    private javax.swing.JPanel Payment;
    private javax.swing.JTextField PositionTEXT;
    private javax.swing.JTable SearchConsumerUpdate;
    private javax.swing.JTable SearchTableConsumer;
    private javax.swing.JTable TBL_Announcements;
    private javax.swing.JTable TBL_TechnecalStaff;
    private javax.swing.JTextField TXT_Balance_Update;
    private javax.swing.JTextField TXT_search_Consumer;
    private javax.swing.JButton TechnecalInformation_BTNAdd;
    private javax.swing.JButton TechnecalInformation_BTNClearF;
    private javax.swing.JButton TechnecalInformation_BTNUpdate;
    private javax.swing.JButton TechnecalInformation_BTNdelete;
    private javax.swing.JPanel Technecal_Staff_Information;
    private javax.swing.JButton UpdatePaymentBTN;
    private javax.swing.JTable View_Client_Payment_Update;
    private javax.swing.JLabel WELCOME;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton jbAnnouncements;
    private javax.swing.JButton jbClientInfo;
    private javax.swing.JButton jbComplaits;
    private javax.swing.JButton jbPayments;
    private javax.swing.JButton jbTechStaffInfo;
    private slideshow.Slideshow slideshow;
    private slideshow.Slideshow_1 slideshow_1;
    private slideshow.Slideshow_2 slideshow_2;
    private slideshow.Slideshow_3 slideshow_3;
    private slideshow.Slideshow_4 slideshow_4;
    private slideshow.Slideshow_5 slideshow_5;
    private javax.swing.JTextField tech_idTEXT;
    private java.awt.TextArea txtFname;
    private javax.swing.JTextField txtId1;
    // End of variables declaration//GEN-END:variables

    private void Seticon() {
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("SUKELCO logo.png")));
    }



}
